plugins {
    id 'java'
    alias(libs.plugins.spring.framework)
    alias(libs.plugins.spring.dependencyManagement)
    alias(libs.plugins.catalogUpdater)
    alias(libs.plugins.reckon)
}

group = 'fr.anisekai'

apply from: 'gradle/reckon.gradle'
apply from: 'gradle/java.gradle'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation(libs.springframework.actuator)
    implementation(libs.springframework.data.jpa)
    implementation(libs.springframework.jdbc)
    implementation(libs.springframework.web)

    testImplementation(libs.testing.springframework.test)

    implementation(libs.stats.sentry.spring)
    implementation(libs.springdoc.openapi)

    implementation(libs.security.uuid)
    implementation(libs.security.jjwt.api)
    runtimeOnly(libs.security.jjwt.impl)
    runtimeOnly(libs.security.jjwt.jackson)

    runtimeOnly(libs.database.mariadb.client)
    implementation(libs.database.flyway.core)
    implementation(libs.database.flyway.mysql)

    implementation(libs.api.discord.jda)
    implementation(libs.api.discord.jda.interactions)
    implementation(libs.api.anisekai.wireless)
    implementation(libs.api.anisekai.sanctum)

    implementation(libs.util.http.client)
    implementation(libs.util.json)
    implementation(libs.util.jsoup)
    implementation(libs.util.rome)
    implementation(libs.util.slugify)

    annotationProcessor(libs.dev.spring.configuration.processor)
    implementation(libs.dev.annotations.jetbrains)
}

test {
    useJUnitPlatform()
}
